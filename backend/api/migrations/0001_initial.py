# Generated by Django 5.1.5 on 2025-03-17 07:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AStrategicGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategic_goal', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Goals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Months',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Perspective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perspective_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='YearData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DStrategicGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategic_goal', models.CharField(max_length=255)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.goals')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_value', models.FloatField()),
                ('plan', models.TextField()),
                ('first_week', models.FloatField(default=0.0)),
                ('second_week', models.FloatField(default=0.0)),
                ('third_week', models.FloatField(default=0.0)),
                ('fourth_week', models.FloatField(default=0.0)),
                ('achievement', models.FloatField(default=0.0)),
                ('performance', models.FloatField(default=0.0)),
                ('quarterly_plan', models.FloatField(default=0.0)),
                ('quarterly_achievement', models.FloatField(default=0.0)),
                ('quarterly_performance', models.FloatField(default=0.0)),
                ('mid_year_target', models.FloatField(default=0.0)),
                ('annual_target', models.FloatField(default=0.0)),
                ('output', models.TextField()),
                ('responsible_body', models.TextField()),
                ('budget_planned', models.FloatField()),
                ('budget_used', models.FloatField()),
                ('year_budget', models.FloatField()),
                ('comment', models.TextField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.department')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.goals')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.measurement')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.months')),
                ('perspective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.perspective')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.yeardata')),
            ],
        ),
        migrations.CreateModel(
            name='ITPlan',
            fields=[
                ('serial_number', models.AutoField(primary_key=True, serialize=False)),
                ('goal_value', models.FloatField()),
                ('january', models.FloatField(default=0.0)),
                ('february', models.FloatField(default=0.0)),
                ('march', models.FloatField(default=0.0)),
                ('april', models.FloatField(default=0.0)),
                ('may', models.FloatField(default=0.0)),
                ('june', models.FloatField(default=0.0)),
                ('july', models.FloatField(default=0.0)),
                ('august', models.FloatField(default=0.0)),
                ('september', models.FloatField(default=0.0)),
                ('october', models.FloatField(default=0.0)),
                ('november', models.FloatField(default=0.0)),
                ('december', models.FloatField(default=0.0)),
                ('budget', models.FloatField()),
                ('result', models.TextField()),
                ('accountable', models.CharField(max_length=255)),
                ('strategic_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.dstrategicgoal')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.measurement')),
                ('perspective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.perspective')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.yeardata')),
            ],
        ),
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_spent', models.FloatField()),
                ('amount_used', models.FloatField()),
                ('measurement_value', models.FloatField()),
                ('comparison', models.CharField(blank=True, max_length=100, null=True)),
                ('difference', models.FloatField(default=0.0)),
                ('username', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.department')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.goals')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.measurement')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.months')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.yeardata')),
            ],
        ),
        migrations.CreateModel(
            name='BSC_2005FiveYearPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_value', models.FloatField()),
                ('aim', models.FloatField()),
                ('main_activity', models.TextField()),
                ('beneficiary_community', models.TextField()),
                ('beneficiary_body', models.TextField()),
                ('budget_government', models.FloatField()),
                ('budget_public', models.FloatField()),
                ('budget_other', models.FloatField()),
                ('astrategic_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.astrategicgoal')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.measurement')),
                ('perspective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.perspective')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.yeardata')),
            ],
        ),
    ]
